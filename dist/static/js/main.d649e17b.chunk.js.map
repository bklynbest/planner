{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","format","ProjectList","projects","map","id","key","project_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","project_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","console","log","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d649e17b.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\n\nconst SignedInLinks = (props) => {\n  return ( \n    <ul className=\"right\">\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\n        <li onClick={props.signOut}>Log Out</li>\n      <li><NavLink to=\"/\" className=\"btn btn-floating green lighten-1\">\n        {props.profile.initials}\n      </NavLink></li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' });\n    });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    \n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(()=> {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  };\n};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return ( \n    <ul className=\"right\">\n      <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n      <li><NavLink to=\"/signin\">Log In</NavLink></li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from '../layout/SignedInLinks';\nimport SignedOutLinks from '../layout/SignedOutLinks';\nimport { connect } from 'react-redux';\n\n\nconst Navbar = (props) => {\n  const  {auth, profile} = props;\n  const links = auth.uid ? <SignedInLinks profile={ profile } /> : <SignedOutLinks /> \n  return ( \n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to= \"/\" className=\"brand-logo left\"> Britannia Planner</Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment'\n\n\nconst ProjectSummary = ({ project }) => {\n    return (\n    <div className=\"project-list \">\n     <div className=\"card z-depth-0 project-summary\">\n       <div className=\"card-content grey-text text-darken-3\">\n         <span className=\"card-title\">{project.title} </span>\n         <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\n         <p className=\"grey-text\">{moment(project.createdAt.toDate()).format('MMMM Do YYYY, h:mm:ss a')}</p>\n       </div>\n     </div>\n    </div>\n    );\n};\n\nexport default ProjectSummary;\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"green-text\">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react';\nimport ProjectList from '../project/ProjectList';\nimport Notifications from './Notifications';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    \n    if (!auth.uid ) return <Redirect to='/signin' />;\n    \n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {collection: 'projects', orderBy: ['createdAt', 'desc' ]},\n    {collection : 'notifications', limit: 3, orderBy: ['time', 'desc' ]}\n    ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n    if (!auth.uid) return <Redirect to= '/signin' />;\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className= \"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).format('MMMM Do YYYY, h:mm:ss a')}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return(\n      <div className= \"container center\">\n        <p>Project Loading...</p>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n    return {\n    project: project,\n    auth: state.firebase.auth\n    };\n};\n\nexport default compose(\n connect(mapStateToProps),\n firestoreConnect([\n   { collection : 'projects'}\n   ])\n)(ProjectDetails)\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {signIn} from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: null,\n    password: null\n  }\n  \n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n  render(){\n    const {authError, auth} = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn green lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n      \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n  state = {\n    email: null,\n    password: null,\n    firstName: null,\n    lastName: null\n  }\n  \n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n    console.log(this.state);\n  }\n  render(){\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn green lighten-1 z-depth-0\">Login</button>\n            \n            <div className= \"red-text center\">{ authError ? <p>{ authError } </p> : null }</div>\n          </div>\n        </form>\n      </div>\n      \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport { createProject } from '../../store/actions/projectActions';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n  state = {\n    title: null,\n    content: null,\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to= '/signin' />;\n    \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn green lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: project => dispatch(createProject(project))\n    \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/project/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/project/CreateProject';\n\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n      <Navbar />\n      <Switch>\n        <Route  exact path=\"/\" component={Dashboard} />\n        <Route path=\"/project/:id\" component={ProjectDetails} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/create\" component={CreateProject} />\n      </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success')\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup failed')\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state\n  }\n};\n\n\n\n\n\nexport default authReducer;","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth'\n  \n  // Initialize Firebase\nlet config = {\n  apiKey: \"AIzaSyBgBI-zY5Oeh2Pg9yiwfO12f4ceVWXmib4\",\n  authDomain: \"britannia-planner.firebaseapp.com\",\n  databaseURL: \"https://britannia-planner.firebaseio.com\",\n  projectId: \"britannia-planner\",\n  storageBucket: \"britannia-planner.appspot.com\",\n  messagingSenderId: \"411641629087\"\n};\n  firebase.initializeApp(config);\n  firebase.firestore().settings({timestampsInSnapshots: true});\n  \nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig), // redux bindings for firestore\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }) // redux binding for firebase\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n});\n"],"sourceRoot":""}